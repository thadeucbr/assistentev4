#!/usr/bin/env node

/**
 * Script para configurar o email principal do Google Calendar
 * Este script ajuda a configurar automaticamente o email que receber√° convites
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

console.log('üîß Configurador do Google Calendar - Email Principal\n');

function updateEnvFile(email) {
  const envPath = path.join(__dirname, '.env');
  
  if (!fs.existsSync(envPath)) {
    console.log('‚ùå Arquivo .env n√£o encontrado. Criando um novo...');
    // Copiar do exemplo
    const examplePath = path.join(__dirname, '.env.example');
    if (fs.existsSync(examplePath)) {
      fs.copyFileSync(examplePath, envPath);
      console.log('‚úÖ Arquivo .env criado a partir do .env.example');
    } else {
      console.log('‚ùå Arquivo .env.example tamb√©m n√£o encontrado.');
      return false;
    }
  }

  let envContent = fs.readFileSync(envPath, 'utf8');
  
  // Verificar se a vari√°vel j√° existe
  const ownerEmailRegex = /^GOOGLE_CALENDAR_OWNER_EMAIL=.*$/m;
  
  if (ownerEmailRegex.test(envContent)) {
    // Atualizar vari√°vel existente
    envContent = envContent.replace(ownerEmailRegex, `GOOGLE_CALENDAR_OWNER_EMAIL=${email}`);
    console.log('üîÑ Vari√°vel GOOGLE_CALENDAR_OWNER_EMAIL atualizada');
  } else {
    // Adicionar nova vari√°vel
    if (envContent.includes('GOOGLE_CREDENTIALS_PATH=')) {
      // Adicionar ap√≥s a linha de credenciais
      envContent = envContent.replace(
        /^(GOOGLE_CREDENTIALS_PATH=.*$)/m,
        `$1\nGOOGLE_CALENDAR_OWNER_EMAIL=${email}`
      );
    } else {
      // Adicionar no final
      envContent += `\n\n# Google Calendar Configuration\nGOOGLE_CREDENTIALS_PATH=./google-credentials.json\nGOOGLE_CALENDAR_OWNER_EMAIL=${email}\n`;
    }
    console.log('‚ûï Vari√°vel GOOGLE_CALENDAR_OWNER_EMAIL adicionada');
  }
  
  fs.writeFileSync(envPath, envContent);
  return true;
}

function validateEmail(email) {
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return emailRegex.test(email);
}

function checkServiceAccountFile() {
  const credentialsPath = path.join(__dirname, 'google-credentials.json');
  if (!fs.existsSync(credentialsPath)) {
    console.log('‚ö†Ô∏è  Arquivo google-credentials.json n√£o encontrado.');
    console.log('üìù Para configurar a Service Account:');
    console.log('   1. Copie google-credentials.example.json para google-credentials.json');
    console.log('   2. Substitua os valores placeholder pelas credenciais reais do Google Cloud Console');
    return false;
  }
  
  try {
    const credentials = JSON.parse(fs.readFileSync(credentialsPath, 'utf8'));
    if (credentials.client_email) {
      console.log(`‚úÖ Service Account encontrada: ${credentials.client_email}`);
      return credentials.client_email;
    }
  } catch (error) {
    console.log('‚ùå Erro ao ler arquivo de credenciais:', error.message);
  }
  
  return false;
}

async function main() {
  // Verificar se h√° argumentos da linha de comando
  const args = process.argv.slice(2);
  let email = args[0];
  
  if (!email) {
    // Modo interativo
    console.log('üìß Digite seu email principal (que receber√° os convites dos eventos):');
    
    // Simular input (em produ√ß√£o, usaria readline)
    email = 'exemplo@gmail.com'; // Placeholder para exemplo
    console.log('üí° Para usar este script interativamente, execute: node setupCalendarEmail.js seu_email@gmail.com\n');
  }
  
  // Validar email se fornecido
  if (email !== 'exemplo@gmail.com' && !validateEmail(email)) {
    console.log('‚ùå Email inv√°lido fornecido:', email);
    console.log('üìß Formato correto: usuario@dominio.com');
    process.exit(1);
  }
  
  // Verificar Service Account
  const serviceAccountEmail = checkServiceAccountFile();
  
  if (email !== 'exemplo@gmail.com') {
    // Atualizar arquivo .env
    if (updateEnvFile(email)) {
      console.log(`‚úÖ Email principal configurado: ${email}`);
      
      if (serviceAccountEmail) {
        console.log('\nüìã Pr√≥ximos passos:');
        console.log('1. Acesse https://calendar.google.com');
        console.log('2. No lado esquerdo, encontre "Meus calend√°rios"');
        console.log('3. Clique nos 3 pontos (‚ãÆ) ao lado do SEU CALEND√ÅRIO PRINCIPAL (n√£o de outros calend√°rios)');
        console.log('4. Selecione "Configura√ß√µes e compartilhamento"');
        console.log('5. Role a p√°gina para baixo at√© encontrar a se√ß√£o "Compartilhar com pessoas espec√≠ficas"');
        console.log('   (Esta se√ß√£o fica depois de "Permiss√µes de acesso" e antes de "Integrar agenda")');
        console.log(`6. Clique em "Adicionar pessoas" e adicione: ${serviceAccountEmail}`);
        console.log('7. Selecione as permiss√µes como "Fazer altera√ß√µes nos eventos"');
        console.log('8. Clique em "Enviar"');
        console.log('\nüí° DICA: Se n√£o encontrar "Compartilhar com pessoas espec√≠ficas",');
        console.log('   certifique-se de estar nas configura√ß√µes do seu calend√°rio PRINCIPAL,');
        console.log('   n√£o de calend√°rios importados ou secund√°rios.');
        console.log('\nüéâ Depois disso, voc√™ receber√° convites autom√°ticos de todos os eventos criados!');
      }
    }
  } else {
    console.log('üìù Uso: node setupCalendarEmail.js seu_email@gmail.com');
    console.log('üìù Exemplo: node setupCalendarEmail.js joao@gmail.com');
  }
}

main().catch(console.error);
