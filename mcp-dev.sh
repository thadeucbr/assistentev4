#!/bin/bash

# Script para gerenciar o servidor MCP
# Uso: ./mcp-dev.sh [start|stop|test|status|install|start-http|test-http]

MCP_DIR="/home/thadeu/assistentev4/mcp-server"
MCP_PID_FILE="/tmp/mcp-server.pid"
MCP_HTTP_PID_FILE="/tmp/mcp-http-server.pid"

case "$1" in
  "install")
    echo "üîß Instalando depend√™ncias do MCP Server..."
    cd "$MCP_DIR"
    npm install
    echo "‚úÖ Depend√™ncias instaladas!"
    ;;
    
  "start")
    if [ -f "$MCP_PID_FILE" ]; then
      echo "‚ö†Ô∏è Servidor MCP j√° est√° executando (PID: $(cat $MCP_PID_FILE))"
      exit 1
    fi
    
    echo "üöÄ Iniciando servidor MCP stdio em background..."
    cd "$MCP_DIR"
    nohup node index.js > /tmp/mcp-server.log 2>&1 &
    echo $! > "$MCP_PID_FILE"
    echo "‚úÖ Servidor MCP iniciado! PID: $(cat $MCP_PID_FILE)"
    echo "üìÑ Logs em: /tmp/mcp-server.log"
    ;;
    
  "start-http")
    if [ -f "$MCP_HTTP_PID_FILE" ]; then
      echo "‚ö†Ô∏è Servidor HTTP MCP j√° est√° executando (PID: $(cat $MCP_HTTP_PID_FILE))"
      exit 1
    fi
    
    echo "üåê Iniciando servidor HTTP MCP em background..."
    cd "$MCP_DIR"
    nohup node http-server.js > /tmp/mcp-http-server.log 2>&1 &
    echo $! > "$MCP_HTTP_PID_FILE"
    echo "‚úÖ Servidor HTTP MCP iniciado! PID: $(cat $MCP_HTTP_PID_FILE)"
    echo "üåç Dispon√≠vel em: http://localhost:3001"
    echo "üìÑ Logs em: /tmp/mcp-http-server.log"
    ;;
    
  "stop")
    stopped_any=false
    
    if [ -f "$MCP_PID_FILE" ]; then
      PID=$(cat "$MCP_PID_FILE")
      echo "üõë Parando servidor MCP stdio (PID: $PID)..."
      kill "$PID" 2>/dev/null
      rm -f "$MCP_PID_FILE"
      stopped_any=true
    fi
    
    if [ -f "$MCP_HTTP_PID_FILE" ]; then
      PID=$(cat "$MCP_HTTP_PID_FILE")
      echo "üõë Parando servidor HTTP MCP (PID: $PID)..."
      kill "$PID" 2>/dev/null
      rm -f "$MCP_HTTP_PID_FILE"
      stopped_any=true
    fi
    
    if [ "$stopped_any" = true ]; then
      echo "‚úÖ Servidores MCP parados!"
    else
      echo "‚ö†Ô∏è Nenhum servidor MCP estava executando"
    fi
    ;;
    
  "status")
    echo "üìä Status dos servidores MCP:"
    
    if [ -f "$MCP_PID_FILE" ]; then
      PID=$(cat "$MCP_PID_FILE")
      if ps -p "$PID" > /dev/null 2>&1; then
        echo "‚úÖ Servidor MCP stdio est√° executando (PID: $PID)"
      else
        echo "‚ùå PID file stdio existe mas processo n√£o est√° ativo"
        rm -f "$MCP_PID_FILE"
      fi
    else
      echo "‚ùå Servidor MCP stdio n√£o est√° executando"
    fi
    
    if [ -f "$MCP_HTTP_PID_FILE" ]; then
      PID=$(cat "$MCP_HTTP_PID_FILE")
      if ps -p "$PID" > /dev/null 2>&1; then
        echo "‚úÖ Servidor HTTP MCP est√° executando (PID: $PID)"
        echo "üåç Dispon√≠vel em: http://localhost:3001"
      else
        echo "‚ùå PID file HTTP existe mas processo n√£o est√° ativo"
        rm -f "$MCP_HTTP_PID_FILE"
      fi
    else
      echo "‚ùå Servidor HTTP MCP n√£o est√° executando"
    fi
    ;;
    
  "test")
    echo "üß™ Testando servidor MCP stdio..."
    cd "$MCP_DIR"
    node test-server.js
    ;;
    
  "test-http")
    echo "üß™ Testando servidor HTTP MCP..."
    cd "$MCP_DIR"
    if [ "$2" = "--start-server" ]; then
      node test-http-server.js --start-server
    else
      node test-http-server.js
    fi
    ;;
    
  "logs")
    case "$2" in
      "http")
        if [ -f "/tmp/mcp-http-server.log" ]; then
          echo "üìÑ √öltimas linhas do log do HTTP MCP Server:"
          tail -n 20 /tmp/mcp-http-server.log
        else
          echo "‚ö†Ô∏è Arquivo de log HTTP n√£o encontrado"
        fi
        ;;
      *)
        if [ -f "/tmp/mcp-server.log" ]; then
          echo "üìÑ √öltimas linhas do log do MCP Server:"
          tail -n 20 /tmp/mcp-server.log
        else
          echo "‚ö†Ô∏è Arquivo de log n√£o encontrado"
        fi
        ;;
    esac
    ;;
    
  "dev")
    echo "üîß Iniciando servidor MCP stdio em modo desenvolvimento..."
    cd "$MCP_DIR"
    npm run dev
    ;;
    
  "dev-http")
    echo "üåê Iniciando servidor HTTP MCP em modo desenvolvimento..."
    cd "$MCP_DIR"
    npm run dev:http
    ;;
    
  *)
    echo "üìñ Uso: $0 {install|start|start-http|stop|test|test-http|status|logs|dev|dev-http}"
    echo ""
    echo "Comandos dispon√≠veis:"
    echo "  install     - Instala depend√™ncias do MCP Server"
    echo "  start       - Inicia o servidor MCP stdio em background"
    echo "  start-http  - Inicia o servidor HTTP MCP em background"
    echo "  stop        - Para todos os servidores MCP"
    echo "  status      - Verifica se os servidores est√£o executando"
    echo "  test        - Executa testes do servidor MCP stdio"
    echo "  test-http   - Executa testes do servidor HTTP MCP"
    echo "  logs        - Mostra os √∫ltimos logs do servidor stdio"
    echo "  logs http   - Mostra os √∫ltimos logs do servidor HTTP"
    echo "  dev         - Inicia servidor stdio em modo desenvolvimento"
    echo "  dev-http    - Inicia servidor HTTP em modo desenvolvimento"
    echo ""
    echo "Exemplos:"
    echo "  $0 test-http --start-server  # Inicia servidor tempor√°rio para testes"
    exit 1
    ;;
esac
